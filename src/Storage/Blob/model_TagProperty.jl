# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct TagProperty <: SwaggerModel
    tag::Any # spec type: Union{ Nothing, String } # spec name: tag
    timestamp::Any # spec type: Union{ Nothing, DateTime } # spec name: timestamp
    objectIdentifier::Any # spec type: Union{ Nothing, String } # spec name: objectIdentifier
    tenantId::Any # spec type: Union{ Nothing, String } # spec name: tenantId
    upn::Any # spec type: Union{ Nothing, String } # spec name: upn

    function TagProperty(;tag=nothing, timestamp=nothing, objectIdentifier=nothing, tenantId=nothing, upn=nothing)
        o = new()
        validate_property(TagProperty, Symbol("tag"), tag)
        setfield!(o, Symbol("tag"), tag)
        validate_property(TagProperty, Symbol("timestamp"), timestamp)
        setfield!(o, Symbol("timestamp"), timestamp)
        validate_property(TagProperty, Symbol("objectIdentifier"), objectIdentifier)
        setfield!(o, Symbol("objectIdentifier"), objectIdentifier)
        validate_property(TagProperty, Symbol("tenantId"), tenantId)
        setfield!(o, Symbol("tenantId"), tenantId)
        validate_property(TagProperty, Symbol("upn"), upn)
        setfield!(o, Symbol("upn"), upn)
        o
    end
end # type TagProperty

const _property_map_TagProperty = Dict{Symbol,Symbol}(Symbol("tag")=>Symbol("tag"), Symbol("timestamp")=>Symbol("timestamp"), Symbol("objectIdentifier")=>Symbol("objectIdentifier"), Symbol("tenantId")=>Symbol("tenantId"), Symbol("upn")=>Symbol("upn"))
const _property_types_TagProperty = Dict{Symbol,String}(Symbol("tag")=>"String", Symbol("timestamp")=>"DateTime", Symbol("objectIdentifier")=>"String", Symbol("tenantId")=>"String", Symbol("upn")=>"String")
Base.propertynames(::Type{ TagProperty }) = collect(keys(_property_map_TagProperty))
Swagger.property_type(::Type{ TagProperty }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_TagProperty[name]))}
Swagger.field_name(::Type{ TagProperty }, property_name::Symbol) =  _property_map_TagProperty[property_name]

function check_required(o::TagProperty)
    true
end

function validate_property(::Type{ TagProperty }, name::Symbol, val)
end
