# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct ImmutabilityPolicyProperty <: SwaggerModel
    immutabilityPeriodSinceCreationInDays::Any # spec type: Union{ Nothing, Int32 } # spec name: immutabilityPeriodSinceCreationInDays
    state::Any # spec type: Union{ Nothing, String } # spec name: state
    allowProtectedAppendWrites::Any # spec type: Union{ Nothing, Bool } # spec name: allowProtectedAppendWrites

    function ImmutabilityPolicyProperty(;immutabilityPeriodSinceCreationInDays=nothing, state=nothing, allowProtectedAppendWrites=nothing)
        o = new()
        validate_property(ImmutabilityPolicyProperty, Symbol("immutabilityPeriodSinceCreationInDays"), immutabilityPeriodSinceCreationInDays)
        setfield!(o, Symbol("immutabilityPeriodSinceCreationInDays"), immutabilityPeriodSinceCreationInDays)
        validate_property(ImmutabilityPolicyProperty, Symbol("state"), state)
        setfield!(o, Symbol("state"), state)
        validate_property(ImmutabilityPolicyProperty, Symbol("allowProtectedAppendWrites"), allowProtectedAppendWrites)
        setfield!(o, Symbol("allowProtectedAppendWrites"), allowProtectedAppendWrites)
        o
    end
end # type ImmutabilityPolicyProperty

const _property_map_ImmutabilityPolicyProperty = Dict{Symbol,Symbol}(Symbol("immutabilityPeriodSinceCreationInDays")=>Symbol("immutabilityPeriodSinceCreationInDays"), Symbol("state")=>Symbol("state"), Symbol("allowProtectedAppendWrites")=>Symbol("allowProtectedAppendWrites"))
const _property_types_ImmutabilityPolicyProperty = Dict{Symbol,String}(Symbol("immutabilityPeriodSinceCreationInDays")=>"Int32", Symbol("state")=>"String", Symbol("allowProtectedAppendWrites")=>"Bool")
Base.propertynames(::Type{ ImmutabilityPolicyProperty }) = collect(keys(_property_map_ImmutabilityPolicyProperty))
Swagger.property_type(::Type{ ImmutabilityPolicyProperty }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ImmutabilityPolicyProperty[name]))}
Swagger.field_name(::Type{ ImmutabilityPolicyProperty }, property_name::Symbol) =  _property_map_ImmutabilityPolicyProperty[property_name]

const _allowed_ImmutabilityPolicyProperty_state = ["Locked", "Unlocked"]

function check_required(o::ImmutabilityPolicyProperty)
    true
end

function validate_property(::Type{ ImmutabilityPolicyProperty }, name::Symbol, val)
    if name === Symbol("state")
        Swagger.validate_param(name, "ImmutabilityPolicyProperty", :enum, val, _allowed_ImmutabilityPolicyProperty_state)
    end
end
