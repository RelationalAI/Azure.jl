# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct LeaseContainerRequest <: SwaggerModel
    action::Any # spec type: Union{ Nothing, String } # spec name: action
    leaseId::Any # spec type: Union{ Nothing, String } # spec name: leaseId
    breakPeriod::Any # spec type: Union{ Nothing, Int32 } # spec name: breakPeriod
    leaseDuration::Any # spec type: Union{ Nothing, Int32 } # spec name: leaseDuration
    proposedLeaseId::Any # spec type: Union{ Nothing, String } # spec name: proposedLeaseId

    function LeaseContainerRequest(;action=nothing, leaseId=nothing, breakPeriod=nothing, leaseDuration=nothing, proposedLeaseId=nothing)
        o = new()
        validate_property(LeaseContainerRequest, Symbol("action"), action)
        setfield!(o, Symbol("action"), action)
        validate_property(LeaseContainerRequest, Symbol("leaseId"), leaseId)
        setfield!(o, Symbol("leaseId"), leaseId)
        validate_property(LeaseContainerRequest, Symbol("breakPeriod"), breakPeriod)
        setfield!(o, Symbol("breakPeriod"), breakPeriod)
        validate_property(LeaseContainerRequest, Symbol("leaseDuration"), leaseDuration)
        setfield!(o, Symbol("leaseDuration"), leaseDuration)
        validate_property(LeaseContainerRequest, Symbol("proposedLeaseId"), proposedLeaseId)
        setfield!(o, Symbol("proposedLeaseId"), proposedLeaseId)
        o
    end
end # type LeaseContainerRequest

const _property_map_LeaseContainerRequest = Dict{Symbol,Symbol}(Symbol("action")=>Symbol("action"), Symbol("leaseId")=>Symbol("leaseId"), Symbol("breakPeriod")=>Symbol("breakPeriod"), Symbol("leaseDuration")=>Symbol("leaseDuration"), Symbol("proposedLeaseId")=>Symbol("proposedLeaseId"))
const _property_types_LeaseContainerRequest = Dict{Symbol,String}(Symbol("action")=>"String", Symbol("leaseId")=>"String", Symbol("breakPeriod")=>"Int32", Symbol("leaseDuration")=>"Int32", Symbol("proposedLeaseId")=>"String")
Base.propertynames(::Type{ LeaseContainerRequest }) = collect(keys(_property_map_LeaseContainerRequest))
Swagger.property_type(::Type{ LeaseContainerRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_LeaseContainerRequest[name]))}
Swagger.field_name(::Type{ LeaseContainerRequest }, property_name::Symbol) =  _property_map_LeaseContainerRequest[property_name]

const _allowed_LeaseContainerRequest_action = ["Acquire", "Renew", "Change", "Release", "Break"]

function check_required(o::LeaseContainerRequest)
    true
end

function validate_property(::Type{ LeaseContainerRequest }, name::Symbol, val)
    if name === Symbol("action")
        Swagger.validate_param(name, "LeaseContainerRequest", :enum, val, _allowed_LeaseContainerRequest_action)
    end
end
